############################################################
#
#	CyberLink for C++
#
#	Copyright (C) Satoshi Konno 2003-2005
#
#	05/19/04
#		- Added support for Cygwin.
#	05/21/04
#		- Added support for MinGW.
#	06/04/04
#		- Added support for MythTV.
#	12/21/04
#		- Added support for std::cout and std::sstream.
#		- Added AC_LANG_CPLUSPLUS to std stream.
#	05/27/05
#		- Added support for Expat
#	08/19/05
#		- Thanks for Visa Smolander <visa.smolander@nokia.com>
#		- Added support for Libxml2
#	09/11/05
#		- Thanks for Roland Moser <rmoser@gmx.at>
#		- Changed the configure to run 'make install' normally.
#	01/30/06
#		- Changed to ignore the POSIX library checking.
#
############################################################

AC_INIT(include/cybergarage/upnp/CyberLink.h)
AC_CONFIG_AUX_DIR(config)

AM_INIT_AUTOMAKE(clink++, 1.0)
AM_CONFIG_HEADER(config.h)

##############################
# Constants
##############################

# GTK version.
GTK_VERSION=1.2.0
GDK_IMLIB_VERSION=1.9.0

# Xerces version.
XERCES_VERSION=2.3.0

# Expat version.
EXPAT_VERSION=1.95

# Libxml2 version.
LIBXML2_VERSION=2.6.20

##############################
# Checks for programs.
##############################

AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_AWK
AC_PROG_RANLIB
AC_LANG_CPLUSPLUS

##############################
#Checks for CYGWIN an MinGW
##############################

#AC_CYGWIN
#if [ test $CYGWIN = yes || test $MINGW = yes ]; then
  #AC_LIBTOOL_WIN32_DLL
  #AM_DISABLE_STATIC
  #AC_PROG_LIBTOOL
  AC_CHECK_LIB([ws2_32],[main])
  #AC_CHECK_LIB([iphlpapi],[main])
#fi

##############################
# Checks for header files.
##############################

AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h limits.h netdb.h netinet/in.h stdlib.h string.h sys/param.h sys/socket.h unistd.h])

##############################
# Checks for uHTTP libraries.
##############################

AC_CHECK_LIB([uhttp++],[main],,[AC_MSG_ERROR(CyberLink needs uHTTP for C++)])

##############################
# Checks for Expat libraries.
##############################

AC_ARG_ENABLE(expat,
	[  --enable-expat	enable Expat support [default=no]],
	[
		if test $enableval = yes; then
			USE_EXPAT=yes
		else
			USE_EXPAT=no
		fi
	],[
		USE_EXPAT=no
	]
)

if [ test $USE_EXPAT = yes ]; then
	AC_CHECK_HEADERS([expat.h],,[AC_MSG_ERROR(CyberLink needs Expat $EXPAT_VERSION later)])
	AC_CHECK_LIB([expat],[main])
	AC_DEFINE([USE_XMLPARSER_EXPAT],1,[EXPAT])
fi

##############################
# Checks for libxml2 libraries.
##############################

AC_ARG_ENABLE(libxml2,
	[  --enable-libxml2	enable Libxml2 support [default=no]],
	[
		if test $enableval = yes; then
			USE_LIBXML2=yes
		else
			USE_LIBXML2=no
		fi
	],[
		USE_LIBXML2=no
	]
)

if [ test $USE_LIBXML2 = yes ]; then
	AC_CHECK_PROG(XML2_CONFIG, xml2-config, yes, no)
	if [ test $XML2_CONFIG = yes ]; then
		AC_DEFINE([USE_XMLPARSER_LIBXML2],1,[LIBXML2])
		XML_CFLAGS=`xml2-config --cflags`
		XML_LIBS=`xml2-config --libs`
		AC_SUBST(XML_CFLAGS)
		AC_SUBST(XML_LIBS)
	else
		AC_MSG_ERROR(CyberLink needs libxml2 $LIBXML2_VERSION later)
	fi
fi

##############################
# Checks for Xerces libraries.
##############################

if [ test $USE_LIBXML2 != yes ]; then
if [ test $USE_EXPAT != yes ]; then
	AC_CHECK_HEADERS([xercesc/util/XercesVersion.hpp],,[AC_MSG_ERROR(CyberLink needs Apache Xerces C++ $XERCES_VERSION later)])
	AC_CHECK_LIB([xerces-c],[main])
fi
fi

##############################
# Checks for iconv
##############################

AC_CHECK_FUNCS([iconv])
AC_CHECK_HEADERS([iconv.h])
AC_CHECK_LIB([iconv],[main])

##############################
# Checks for pthread
##############################

AC_CHECK_HEADERS([pthread.h],,[AC_MSG_ERROR(CyberLink needs POSIX thread library)])
AC_CHECK_LIB([pthread],[main])

##############################
# Checks for MySQL libraries.
##############################

AC_ARG_ENABLE(mythtv,
	[  --enable-mythtv	enable MythTV support [default=no]],
	[
		if test $enableval = yes; then
			USE_MYTHTV=yes
		else
			USE_MYTHTV=no
		fi
	],[
		USE_MYTHTV=no
	]
)
if [test $USE_MYTHTV = yes]; then
	AC_CHECK_HEADER([mysql/mysql.h],[HAVE_MYSQL_HEADER=yes],[HAVE_MYSQL_HEADER=no])
	if [ test $HAVE_MYSQL_HEADER = yes ]; then
		#AC_CHECK_LIB([mysqlclient],[mysql_init],[HAVE_MYSQL_LIB=yes LIBS="$LIBS -lmysqlclient"],[HAVE_MYSQL_LIB=no])
		#if [ test $HAVE_MYSQL_LIB = no ]; then
			MYSQL_LIB_DIR=/usr/lib/mysql
			LDFLAGS="$LDFLAGS -L$MYSQL_LIB_DIR"
			AC_CHECK_LIB([mysqlclient],[mysql_init],[HAVE_MYSQL_LIB=yes LIBS="$LIBS -lmysqlclient"],[HAVE_MYSQL_LIB=no])
		#fi
	fi
	if [ test $HAVE_MYSQL_LIB = yes ]; then
		AC_DEFINE([SUPPORT_MYTHTV],1,[MYTHTV])
		AC_DEFINE([SUPPORT_MYSQL],1,[MYSQL])
	fi
fi

##############################
# Checks for GTK libraries.
##############################

AC_CHECK_PROG(GTK_CONFIG, gtk-config, yes, no)
#if [ test $GTK_CONFIG = yes ]; then
#	AM_PATH_GTK([$GTK_VERSION],[AC_DEFINE([HAVE_GTK],1,[GTK])],)
# 	AM_PATH_GDK_IMLIB($GDK_IMLIB_VERSION,[AC_DEFINE([HAVE_GDK_IMLIB],1,[GDK_IMLIB])],)
#else
	GTK_CFLAGS=
	GDK_IMLIB_CFLAGS=
	GTK_LIBS=
	GDK_IMLIB_LIBS=
	AC_SUBST(GTK_CFLAGS)
	AC_SUBST(GDK_IMLIB_CFLAGS)
	AC_SUBST(GTK_LIBS)
	AC_SUBST(GDK_IMLIB_LIBS)
#fi

##############################
# Checks for typedefs, structures, and compiler characteristics.
##############################

#AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_STRUCT_TM

##############################
# Checks for Network functions
##############################

AC_CHECK_FUNCS([socket])
AC_CHECK_FUNCS([inet_ntoa])
AC_CHECK_HEADERS([ifaddrs.h])
AC_CHECK_FUNCS([getifaddrs])

AC_MSG_CHECKING(for socklen_t)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
socklen_t foosocket;
],
[],
[AC_MSG_RESULT(yes)
AC_DEFINE([HAVE_SOCKLEN_T],1,[SOCKLEN_T])],
[AC_MSG_RESULT(no)]
)

##############################
# Checks for C++ stream.
##############################

AC_CHECK_HEADERS([sstream])

AC_MSG_CHECKING(for std::cout)
AC_TRY_COMPILE([
#include <iostream>
void testFunc(){
std::cout << "" << std::endl;
}
],
[],
[AC_MSG_RESULT(yes)
AC_DEFINE([HAVE_STD_COUT],1,[STD_COUT])],
[AC_MSG_RESULT(no)]
)

##############################
# Checks for other functions.
##############################

AC_CHECK_FUNCS([fopen])
AC_CHECK_FUNCS([memset])
AC_CHECK_FUNCS([realpath])
AC_CHECK_FUNCS([localtime_r])
AC_CHECK_FUNCS([gmtime_r])
AC_CHECK_FUNCS([snprintf])
AC_CHECK_FUNCS([strchr])
AC_CHECK_FUNCS([uname])

##############################
# Makefiles
##############################

AC_OUTPUT([
Makefile
include/Makefile
lib/Makefile
lib/unix/Makefile
sample/Makefile
sample/upnpdump/Makefile
sample/upnpdump/unix/Makefile
sample/clock/Makefile
sample/clock/unix/Makefile
sample/tv/Makefile
sample/tv/unix/Makefile
sample/media/Makefile
sample/media/server/Makefile
sample/media/server/unix/Makefile
sample/media/serverdump/Makefile
sample/media/serverdump/unix/Makefile
])
